üìù Cheat Sheet Completa ‚Äì List<T> em C#

Comando	O que faz	Exemplo:

List<T> lista = new List<T>();	Cria uma lista vazia que vai guardar elementos do tipo T.	List<string> nomes = new List<string>();
lista.Add(item);	Adiciona um elemento no final da lista.	nomes.Add("Ana");
lista.Remove(item);	Remove o primeiro elemento igual ao informado.	nomes.Remove("Ana");
lista.RemoveAt(indice);	Remove o elemento na posi√ß√£o espec√≠fica.	nomes.RemoveAt(0);
lista.Contains(item);	Verifica se o elemento existe na lista. Retorna true ou false.	if(nomes.Contains("Ana")) Console.WriteLine("Existe!");
lista.IndexOf(item);	Retorna o √≠ndice da primeira ocorr√™ncia do elemento. Retorna -1 se n√£o existir.	int i = nomes.IndexOf("Bruno");
lista.Count;	Retorna o n√∫mero de elementos na lista.	int total = nomes.Count;
lista.Clear();	Remove todos os elementos da lista, deixando-a vazia.	nomes.Clear();
lista.Sort();	Ordena os elementos em ordem crescente (alfab√©tica ou num√©rica).	nomes.Sort();
lista.Reverse();	Inverte a ordem dos elementos da lista.	nomes.Reverse();
lista.Insert(indice, item);	Insere um elemento em uma posi√ß√£o espec√≠fica, empurrando os demais para frente.	nomes.Insert(1, "Carlos");
lista.ToArray();	Converte a lista em um array tradicional do C#.	string[] arrayNomes = nomes.ToArray();
lista.TrimExcess();	Reduz a capacidade interna da lista para o tamanho atual, economizando mem√≥ria.	nomes.TrimExcess();
lista.Find(condi√ß√£o);	Retorna o primeiro elemento que satisfa√ßa a condi√ß√£o.	string nome = nomes.Find(n => n.StartsWith("A"));
lista.FindAll(condi√ß√£o);	Retorna uma lista com todos os elementos que satisfa√ßam a condi√ß√£o.	List<string> aNomes = nomes.FindAll(n => n.StartsWith("A"));
lista.ForEach(a√ß√£o);	Executa uma a√ß√£o para cada elemento da lista.	nomes.ForEach(n => Console.WriteLine(n));
lista.Exists(condi√ß√£o);	Retorna true se algum elemento satisfaz a condi√ß√£o.	bool temA = nomes.Exists(n => n.StartsWith("A"));
lista.RemoveAll(condi√ß√£o);	Remove todos os elementos que satisfa√ßam a condi√ß√£o.	nomes.RemoveAll(n => n.StartsWith("B"));
lista.ConvertAll(convers√£o);	Converte todos os elementos para outro tipo, retornando uma nova lista.	List<int> tamanhos = nomes.ConvertAll(n => n.Length);
lista.BinarySearch(item);	Procura o item em uma lista ordenada e retorna o √≠ndice. Retorna negativo se n√£o encontrar.	int i = nomes.BinarySearch("Ana");


